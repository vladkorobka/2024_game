{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar START_BTN = document.querySelector(\".button\");\nvar RESTART_VALUE = \"Restart\";\nvar START_MESSAGE = document.querySelector(\".message-start\");\nvar WIN_MESSAGE = document.querySelector(\".message-win\");\nvar LOSE_MESSAGE = document.querySelector(\".message-lose\");\nvar SCORE = document.querySelector(\".game-score\");\nvar ROW = document.querySelectorAll(\".field-row\");\nvar ARROW = {\n    UP: \"ArrowUp\",\n    RIGHT: \"ArrowRight\",\n    DOWN: \"ArrowDown\",\n    LEFT: \"ArrowLeft\"\n};\nvar WIN_VALUE = 2048;\nvar ROWS = 4;\nvar COLUMNS = 4;\nvar board = [];\nvar score = 0;\nvar isLose = false;\nvar isWon = false;\nvar isInit = false;\nfunction loseGame() {\n    for(var row = 0; row < ROWS; row++)for(var column = 0; column < COLUMNS; column++){\n        if (board[row][column] === 0) return false;\n        var nextColumn = board[row][column + 1];\n        if (nextColumn !== undefined && board[row][column] === nextColumn) return false;\n    }\n    for(var column1 = 0; column1 < COLUMNS; column1++)for(var row1 = 0; row1 < ROWS - 1; row1++){\n        var nextRow = board[row1 + 1][column1];\n        if (nextRow !== undefined && board[row1][column1] === nextRow) return false;\n    }\n    return true;\n}\nfunction sameBoards(arr1, arr2) {\n    if (arr1.length !== arr2.length) return false;\n    for(var i = 0; i < arr1.length; i++)for(var j = 0; j < arr1[i].length; j++){\n        if (arr1[i][j] !== arr2[i][j]) return false;\n    }\n    return true;\n}\nfunction nextStep(newBoard) {\n    board = newBoard;\n    setNewCell();\n    updateBoard();\n}\nfunction deleteZeros(item) {\n    return item.filter(function(cell) {\n        return cell !== 0;\n    });\n}\nfunction transposeMatrix(arr, columnCount, rowsCount) {\n    var tempArr = [];\n    for(var column = 0; column < columnCount; column++){\n        var col = [];\n        for(var row = 0; row < rowsCount; row++)col.push(arr[row][column]);\n        tempArr.push(col);\n    }\n    return tempArr;\n}\nfunction wonGame() {\n    isWon = true;\n    isInit = false;\n    WIN_MESSAGE.classList.remove(\"hidden\");\n}\nfunction setNewCell() {\n    var trigger = true;\n    var number = Math.random() < 0.9 ? 2 : 4;\n    while(trigger){\n        var row = Math.floor(Math.random() * ROWS);\n        var column = Math.floor(Math.random() * COLUMNS);\n        if (board[row][column] === 0) {\n            board[row][column] = number;\n            trigger = false;\n        }\n    }\n    if (loseGame()) {\n        isLose = true;\n        isInit = false;\n        LOSE_MESSAGE.classList.remove(\"hidden\");\n    }\n}\nfunction updateBoard() {\n    for(var i = 0; i < board.length; i++)for(var j = 0; j < board[i].length; j++){\n        var cell = ROW[i].children[j];\n        var cellValue = board[i][j];\n        if (cellValue) {\n            cell.textContent = cellValue;\n            cell.className = \"field-cell\";\n            cell.classList.add(\"field-cell--\".concat(cellValue));\n            if (cellValue === WIN_VALUE) wonGame();\n        } else {\n            cell.textContent = \"\";\n            cell.className = \"field-cell\";\n        }\n        SCORE.textContent = score;\n    }\n}\nfunction initGame() {\n    START_MESSAGE.classList.add(\"hidden\");\n    LOSE_MESSAGE.classList.add(\"hidden\");\n    WIN_MESSAGE.classList.add(\"hidden\");\n    SCORE.textContent = 0;\n    isInit = true;\n    isLose = false;\n    isWon = false;\n    score = 0;\n    board = [\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ],\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ];\n    for(var i = 0; i < board.length; i++)for(var j = 0; j < board[i].length; j++){\n        var cell = ROW[i].children[j];\n        cell.textContent = \"\";\n        cell.className = \"field-cell\";\n    }\n    setNewCell();\n    setNewCell();\n    updateBoard();\n}\nfunction moveUp() {\n    var matrix = transposeMatrix(board, COLUMNS, ROWS);\n    var tempBoard = [];\n    matrix.forEach(function(col) {\n        var column = deleteZeros(col);\n        for(var i = 0; i < column.length; i++)if (column[i] === column[i + 1]) {\n            column[i] *= 2;\n            score += column[i];\n            column[i + 1] = 0;\n        }\n        column = deleteZeros(column);\n        while(column.length < ROWS)column.push(0);\n        tempBoard.push(column);\n    });\n    if (!sameBoards(board, transposeMatrix(tempBoard, COLUMNS, ROWS))) nextStep(transposeMatrix(tempBoard, COLUMNS, ROWS));\n}\nfunction moveRight() {\n    var tempBoard = [];\n    board.forEach(function(item) {\n        var row = deleteZeros(item);\n        for(var i = row.length - 1; i >= 0; i--)if (row[i] === row[i - 1]) {\n            row[i] *= 2;\n            score += row[i];\n            row[i - 1] = 0;\n        }\n        row = deleteZeros(row);\n        while(row.length < ROWS)row.unshift(0);\n        tempBoard.push(row);\n    });\n    if (!sameBoards(board, tempBoard)) nextStep(tempBoard);\n}\nfunction moveDown() {\n    var matrix = transposeMatrix(board, COLUMNS, ROWS);\n    var tempBoard = [];\n    matrix.forEach(function(item) {\n        var column = deleteZeros(item);\n        for(var i = column.length - 1; i >= 0; i--)if (column[i] === column[i - 1]) {\n            column[i] *= 2;\n            score += column[i];\n            column[i - 1] = 0;\n        }\n        column = deleteZeros(column);\n        while(column.length < ROWS)column.unshift(0);\n        tempBoard.push(column);\n    });\n    if (!sameBoards(board, transposeMatrix(tempBoard, COLUMNS, ROWS))) nextStep(transposeMatrix(tempBoard, COLUMNS, ROWS));\n}\nfunction moveLeft() {\n    var tempBoard = [];\n    board.forEach(function(item) {\n        var row = deleteZeros(item);\n        for(var i = 0; i < row.length; i++)if (row[i] === row[i + 1]) {\n            row[i] *= 2;\n            score += row[i];\n            row[i + 1] = 0;\n        }\n        row = deleteZeros(row);\n        while(row.length < ROWS)row.push(0);\n        tempBoard.push(row);\n    });\n    if (!sameBoards(board, tempBoard)) nextStep(tempBoard);\n}\ndocument.addEventListener(\"keydown\", function(e) {\n    e.preventDefault();\n    if (!isInit || isLose || isWon) return;\n    switch(e.key){\n        case ARROW.UP:\n            moveUp();\n            break;\n        case ARROW.DOWN:\n            moveDown();\n            break;\n        case ARROW.RIGHT:\n            moveRight();\n            break;\n        case ARROW.LEFT:\n            moveLeft();\n            break;\n        default:\n            return;\n    }\n});\nSTART_BTN.addEventListener(\"click\", function() {\n    if (START_BTN.classList.contains(\"start\")) {\n        START_BTN.textContent = RESTART_VALUE;\n        START_BTN.classList.add(\"restart\");\n        START_BTN.classList.remove(\"start\");\n        START_MESSAGE.classList.add(\"hidden\");\n    }\n    initGame();\n});\n\n//# sourceMappingURL=index.22974814.js.map\n","'use strict';\r\n\r\nconst START_BTN = document.querySelector('.button');\r\nconst RESTART_VALUE = 'Restart';\r\nconst START_MESSAGE = document.querySelector('.message-start');\r\nconst WIN_MESSAGE = document.querySelector('.message-win');\r\nconst LOSE_MESSAGE = document.querySelector('.message-lose');\r\nconst SCORE = document.querySelector('.game-score');\r\n\r\nconst ROW = document.querySelectorAll('.field-row');\r\n\r\nconst ARROW = {\r\n  UP: 'ArrowUp',\r\n  RIGHT: 'ArrowRight',\r\n  DOWN: 'ArrowDown',\r\n  LEFT: 'ArrowLeft',\r\n};\r\n\r\nconst WIN_VALUE = 2048;\r\nconst ROWS = 4;\r\nconst COLUMNS = 4;\r\n\r\nlet board = [];\r\nlet score = 0;\r\nlet isLose = false;\r\nlet isWon = false;\r\nlet isInit = false;\r\n\r\nfunction loseGame() {\r\n  for (let row = 0; row < ROWS; row++) {\r\n    for (let column = 0; column < COLUMNS; column++) {\r\n      if (board[row][column] === 0) {\r\n        return false;\r\n      }\r\n\r\n      const nextColumn = board[row][column + 1];\r\n\r\n      if (nextColumn !== undefined && board[row][column] === nextColumn) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (let column = 0; column < COLUMNS; column++) {\r\n    for (let row = 0; row < ROWS - 1; row++) {\r\n      const nextRow = board[row + 1][column];\r\n\r\n      if (nextRow !== undefined && board[row][column] === nextRow) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction sameBoards(arr1, arr2) {\r\n  if (arr1.length !== arr2.length) {\r\n    return false;\r\n  }\r\n\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    for (let j = 0; j < arr1[i].length; j++) {\r\n      if (arr1[i][j] !== arr2[i][j]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction nextStep(newBoard) {\r\n  board = newBoard;\r\n  setNewCell();\r\n  updateBoard();\r\n}\r\n\r\nfunction deleteZeros(item) {\r\n  return item.filter(cell => cell !== 0);\r\n}\r\n\r\nfunction transposeMatrix(arr, columnCount, rowsCount) {\r\n  const tempArr = [];\r\n\r\n  for (let column = 0; column < columnCount; column++) {\r\n    const col = [];\r\n\r\n    for (let row = 0; row < rowsCount; row++) {\r\n      col.push(arr[row][column]);\r\n    }\r\n    tempArr.push(col);\r\n  }\r\n\r\n  return tempArr;\r\n}\r\n\r\nfunction wonGame() {\r\n  isWon = true;\r\n  isInit = false;\r\n  WIN_MESSAGE.classList.remove('hidden');\r\n}\r\n\r\nfunction setNewCell() {\r\n  let trigger = true;\r\n  const number = Math.random() < 0.9 ? 2 : 4;\r\n\r\n  while (trigger) {\r\n    const row = Math.floor(Math.random() * ROWS);\r\n    const column = Math.floor(Math.random() * COLUMNS);\r\n\r\n    if (board[row][column] === 0) {\r\n      board[row][column] = number;\r\n      trigger = false;\r\n    }\r\n  }\r\n\r\n  if (loseGame()) {\r\n    isLose = true;\r\n    isInit = false;\r\n    LOSE_MESSAGE.classList.remove('hidden');\r\n  }\r\n}\r\n\r\nfunction updateBoard() {\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      const cell = ROW[i].children[j];\r\n      const cellValue = board[i][j];\r\n\r\n      if (cellValue) {\r\n        cell.textContent = cellValue;\r\n        cell.className = 'field-cell';\r\n        cell.classList.add(`field-cell--${cellValue}`);\r\n\r\n        if (cellValue === WIN_VALUE) {\r\n          wonGame();\r\n        }\r\n      } else {\r\n        cell.textContent = '';\r\n        cell.className = 'field-cell';\r\n      }\r\n      SCORE.textContent = score;\r\n    }\r\n  }\r\n}\r\n\r\nfunction initGame() {\r\n  START_MESSAGE.classList.add('hidden');\r\n  LOSE_MESSAGE.classList.add('hidden');\r\n  WIN_MESSAGE.classList.add('hidden');\r\n  SCORE.textContent = 0;\r\n\r\n  isInit = true;\r\n  isLose = false;\r\n  isWon = false;\r\n  score = 0;\r\n\r\n  board = [\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n  ];\r\n\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      const cell = ROW[i].children[j];\r\n\r\n      cell.textContent = '';\r\n      cell.className = 'field-cell';\r\n    }\r\n  }\r\n\r\n  setNewCell();\r\n  setNewCell();\r\n  updateBoard();\r\n}\r\n\r\nfunction moveUp() {\r\n  const matrix = transposeMatrix(board, COLUMNS, ROWS);\r\n  const tempBoard = [];\r\n\r\n  matrix.forEach(col => {\r\n    let column = deleteZeros(col);\r\n\r\n    for (let i = 0; i < column.length; i++) {\r\n      if (column[i] === column[i + 1]) {\r\n        column[i] *= 2;\r\n        score += column[i];\r\n        column[i + 1] = 0;\r\n      }\r\n    }\r\n    column = deleteZeros(column);\r\n\r\n    while (column.length < ROWS) {\r\n      column.push(0);\r\n    }\r\n\r\n    tempBoard.push(column);\r\n  });\r\n\r\n  if (!sameBoards(board, transposeMatrix(tempBoard, COLUMNS, ROWS))) {\r\n    nextStep(transposeMatrix(tempBoard, COLUMNS, ROWS));\r\n  }\r\n}\r\n\r\nfunction moveRight() {\r\n  const tempBoard = [];\r\n\r\n  board.forEach(item => {\r\n    let row = deleteZeros(item);\r\n\r\n    for (let i = row.length - 1; i >= 0; i--) {\r\n      if (row[i] === row[i - 1]) {\r\n        row[i] *= 2;\r\n        score += row[i];\r\n        row[i - 1] = 0;\r\n      }\r\n    }\r\n    row = deleteZeros(row);\r\n\r\n    while (row.length < ROWS) {\r\n      row.unshift(0);\r\n    }\r\n\r\n    tempBoard.push(row);\r\n  });\r\n\r\n  if (!sameBoards(board, tempBoard)) {\r\n    nextStep(tempBoard);\r\n  }\r\n}\r\n\r\nfunction moveDown() {\r\n  const matrix = transposeMatrix(board, COLUMNS, ROWS);\r\n  const tempBoard = [];\r\n\r\n  matrix.forEach(item => {\r\n    let column = deleteZeros(item);\r\n\r\n    for (let i = column.length - 1; i >= 0; i--) {\r\n      if (column[i] === column[i - 1]) {\r\n        column[i] *= 2;\r\n        score += column[i];\r\n        column[i - 1] = 0;\r\n      }\r\n    }\r\n    column = deleteZeros(column);\r\n\r\n    while (column.length < ROWS) {\r\n      column.unshift(0);\r\n    }\r\n\r\n    tempBoard.push(column);\r\n  });\r\n\r\n  if (!sameBoards(board, transposeMatrix(tempBoard, COLUMNS, ROWS))) {\r\n    nextStep(transposeMatrix(tempBoard, COLUMNS, ROWS));\r\n  }\r\n}\r\n\r\nfunction moveLeft() {\r\n  const tempBoard = [];\r\n\r\n  board.forEach(item => {\r\n    let row = deleteZeros(item);\r\n\r\n    for (let i = 0; i < row.length; i++) {\r\n      if (row[i] === row[i + 1]) {\r\n        row[i] *= 2;\r\n        score += row[i];\r\n        row[i + 1] = 0;\r\n      }\r\n    }\r\n    row = deleteZeros(row);\r\n\r\n    while (row.length < ROWS) {\r\n      row.push(0);\r\n    }\r\n\r\n    tempBoard.push(row);\r\n  });\r\n\r\n  if (!sameBoards(board, tempBoard)) {\r\n    nextStep(tempBoard);\r\n  }\r\n}\r\n\r\ndocument.addEventListener('keydown', (e) => {\r\n  e.preventDefault();\r\n\r\n  if (!isInit || isLose || isWon) {\r\n    return;\r\n  }\r\n\r\n  switch (e.key) {\r\n    case ARROW.UP:\r\n      moveUp();\r\n      break;\r\n\r\n    case ARROW.DOWN:\r\n      moveDown();\r\n      break;\r\n\r\n    case ARROW.RIGHT:\r\n      moveRight();\r\n      break;\r\n\r\n    case ARROW.LEFT:\r\n      moveLeft();\r\n      break;\r\n\r\n    default:\r\n      return;\r\n  };\r\n});\r\n\r\nSTART_BTN.addEventListener('click', () => {\r\n  if (START_BTN.classList.contains('start')) {\r\n    START_BTN.textContent = RESTART_VALUE;\r\n    START_BTN.classList.add('restart');\r\n    START_BTN.classList.remove('start');\r\n    START_MESSAGE.classList.add('hidden');\r\n  }\r\n\r\n  initGame();\r\n});\r\n"],"names":["START_BTN","document","querySelector","START_MESSAGE","WIN_MESSAGE","LOSE_MESSAGE","SCORE","ROW","querySelectorAll","ARROW","UP","RIGHT","DOWN","LEFT","board","score","isLose","isWon","isInit","sameBoards","arr1","arr2","length","i","j","nextStep","newBoard","setNewCell","updateBoard","deleteZeros","item","filter","cell","transposeMatrix","arr","columnCount","rowsCount","tempArr","column","col","row","push","trigger","number","Math","random","floor","loseGame","nextColumn","undefined","column1","row1","ROWS","nextRow","classList","remove","children","cellValue","textContent","className","add","concat","addEventListener","e","matrix","tempBoard","preventDefault","key","forEach","unshift","contains","initGame"],"version":3,"file":"index.22974814.js.map"}